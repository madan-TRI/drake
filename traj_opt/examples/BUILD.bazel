# -*- python -*-
# This file contains rules for Bazel; see drake/doc/bazel.rst.

load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_binary",
    "drake_cc_library",
)
load("//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

drake_cc_binary(
    name = "acrobot",
    srcs = ["acrobot.cc"],
    add_test_rule = 1,
    data = [
        ":acrobot.yaml",
        "//examples/acrobot:models",
    ],
    deps = [
        ":example_base",
        "//common:find_resource",
        "//multibody/parsing",
        "//multibody/plant",
    ],
)

drake_cc_binary(
    name = "block_push",
    srcs = ["block_push.cc"],
    add_test_rule = 1,
    data = [
        ":block_push.yaml",
    ],
    test_rule_args = [],
    deps = [
        ":example_base",
        "//common:find_resource",
        "//multibody/plant",
    ],
)

drake_cc_binary(
    name = "hopper",
    srcs = ["hopper.cc"],
    add_test_rule = 1,
    data = [
        ":hopper.yaml",
        ":models",
    ],
    test_rule_args = [],
    deps = [
        ":example_base",
        "//common:find_resource",
        "//multibody/parsing",
        "//multibody/plant",
    ],
)

drake_cc_binary(
    name = "mini_cheetah",
    srcs = ["mini_cheetah.cc"],
    add_test_rule = 1,
    data = [
        ":mini_cheetah.yaml",
        ":models",
    ],
    test_rule_args = [],
    deps = [
        ":example_base",
        "//common:find_resource",
        "//multibody/parsing",
        "//multibody/plant",
    ],
)

drake_cc_binary(
    name = "pendulum",
    srcs = ["pendulum.cc"],
    add_test_rule = 1,
    data = [
        ":pendulum.yaml",
        "//examples/pendulum:models",
    ],
    deps = [
        ":example_base",
        "//common:find_resource",
        "//multibody/parsing",
        "//multibody/plant",
    ],
)

drake_cc_binary(
    name = "punyo_hug",
    srcs = ["punyo_hug.cc"],
    add_test_rule = 1,
    data = [
        ":models",
        ":punyo_hug.yaml",
    ],
    deps = [
        ":example_base",
        "//common:find_resource",
        "//multibody/parsing",
        "//multibody/plant",
    ],
)

drake_cc_binary(
    name = "kuka",
    srcs = ["kuka.cc"],
    add_test_rule = 1,
    data = [
        ":kuka.yaml",
        ":models",
        "//manipulation/models/iiwa_description:models",
    ],
    deps = [
        ":example_base",
        "//common:find_resource",
        "//multibody/parsing",
        "//multibody/plant",
    ],
)

drake_cc_binary(
    name = "allegro_hand",
    srcs = ["allegro_hand.cc"],
    add_test_rule = 1,
    data = [
        ":allegro_hand.yaml",
        ":allegro_hand_upside_down.yaml",
        ":models",
        "//manipulation/models/allegro_hand_description:models",
    ],
    deps = [
        ":example_base",
        "//common:find_resource",
        "//multibody/parsing",
        "//multibody/plant",
        "@gflags",
    ],
)

drake_cc_binary(
    name = "2dof_spinner",
    srcs = ["2dof_spinner.cc"],
    add_test_rule = 1,
    data = [
        ":2dof_spinner.yaml",
        ":models",
    ],
    test_rule_args = [],
    deps = [
        ":example_base",
        "//common:find_resource",
        "//multibody/parsing",
        "//multibody/plant",
    ],
)

drake_cc_binary(
    name = "floating_box",
    srcs = ["floating_box.cc"],
    add_test_rule = 1,
    data = [
        ":floating_box.yaml",
    ],
    test_rule_args = [],
    deps = [
        ":example_base",
        "//common:find_resource",
        "//multibody/plant",
    ],
)

drake_cc_binary(
    name = "wall_ball",
    srcs = ["wall_ball.cc"],
    add_test_rule = 1,
    data = [
        ":models",
        ":wall_ball.yaml",
    ],
    test_rule_args = [],
    deps = [
        ":example_base",
        "//common:find_resource",
        "//multibody/parsing",
        "//multibody/plant",
    ],
)

drake_cc_binary(
    name = "frictionless_spinner",
    srcs = ["frictionless_spinner.cc"],
    add_test_rule = 1,
    data = [
        ":frictionless_spinner.yaml",
        ":models",
    ],
    test_rule_args = [],
    deps = [
        ":example_base",
        "//common:find_resource",
        "//multibody/parsing",
        "//multibody/plant",
        "@gflags",
    ],
)

drake_cc_binary(
    name = "airhockey",
    srcs = ["airhockey.cc"],
    add_test_rule = 1,
    data = [
        ":airhockey.yaml",
    ],
    test_rule_args = [],
    deps = [
        ":example_base",
        "//common:find_resource",
        "//common:profiler",
        "//multibody/parsing",
        "//multibody/plant",
    ],
)

drake_cc_binary(
    name = "spinner",
    srcs = ["spinner.cc"],
    add_test_rule = 1,
    data = [
        ":models",
        ":spinner.yaml",
    ],
    test_rule_args = [],
    deps = [
        ":example_base",
        "//common:find_resource",
        "//common:profiler",
        "//multibody/parsing",
        "//multibody/plant",
    ],
)

drake_cc_library(
    name = "lcm_interfaces",
    srcs = ["lcm_interfaces.cc"],
    hdrs = ["lcm_interfaces.h"],
    deps = [
        "//lcmtypes:traj_opt",
        "//multibody/plant",
        "//systems/framework:diagram",
        "//systems/framework:leaf_system",
        "//systems/framework:vector",
        "//traj_opt:problem_definition",
        "//traj_opt:trajectory_optimizer",
    ],
)

drake_cc_library(
    name = "example_base",
    srcs = ["example_base.cc"],
    hdrs = ["example_base.h"],
    deps = [
        ":lcm_interfaces",
        ":yaml_config",
        "//common:find_resource",
        "//examples/acrobot:acrobot_lcm",
        "//lcmtypes:acrobot",
        "//lcmtypes:traj_opt",
        "//multibody/parsing",
        "//multibody/plant",
        "//multibody/plant:contact_results_to_lcm",
        "//systems/analysis:simulator",
        "//systems/framework:diagram",
        "//systems/lcm",
        "//systems/primitives:constant_vector_source",
        "//traj_opt:problem_definition",
        "//traj_opt:trajectory_optimizer",
        "//visualization:visualization_config_functions",
    ],
)

drake_cc_library(
    name = "yaml_config",
    srcs = [],
    hdrs = ["yaml_config.h"],
    deps = [
        "//common:essential",
        "//common/yaml",
    ],
)

add_lint_tests()
