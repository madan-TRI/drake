##
#
# This file contains parameters defining the punyo hug optimization problem,
# where a squishy humanoid robot is tasked with picking up a large object by
# hugging it.
#
##

# Initial state
q_init : [0.0,                     # height
          0.0, 0.0, 0.0,            # torso
          0.8,-0.1, 0.5, 0.0, 0.0,  # right arm
          0.8,-0.1, 0.5, 0.0, 0.0,  # left arm
          1.0, 0.0, 0.0, 0.0,       # ball orientation
          0.0, 0.4, 0.2]            # ball position
v_init : [0.0,
          0.0, 0.0, 0.0,
          0.0, 0.0, 0.0, 0.0, 0.0,
          0.0, 0.0, 0.0, 0.0, 0.0,
          0.0, 0.0, 0.0,
          0.0, 0.0, 0.0]

# Target state
q_nom_start : [0.0,
               0.0, 0.0, 0.0,
               0.8,-0.1, 0.5, 0.0, 0.0,
               0.8,-0.1, 0.5, 0.0, 0.0,
               1.0, 0.0, 0.0, 0.0,
               0.2, 0.4, 0.8]
q_nom_end : [0.0,
             0.0, 0.0, 0.0,
             0.8,-0.1, 0.5, 0.0, 0.0,
             0.8,-0.1, 0.5, 0.0, 0.0,
             1.0, 0.0, 0.0, 0.0,
             0.2, 0.4, 0.8]

# Initial guess. The initial sequence of generalized positions is generated by
# linearly iterpolating between q_init and q_guess.
q_guess : [0.0,
           0.0, 0.0, 0.0,
           0.8, 0.0, 0.5, 0.0, 0.0,
           0.8, 0.0, 0.5, 0.0, 0.0,
           1.0, 0.0, 0.0, 0.0,
           0.0, 0.4, 0.2]

# Cost Weights
Qq : [0.1, 
      0.1, 0.1, 0.1, 
      0.1, 0.1, 0.1, 0.1, 0.1, 
      0.1, 0.1, 0.1, 0.1, 0.1,
      1, 1, 1, 1,
      10, 10, 20]
Qv : [0.1, 
      0.1, 0.1, 0.1, 
      0.1, 0.1, 0.1, 0.1, 0.1, 
      0.1, 0.1, 0.1, 0.1, 0.1,
      1, 1, 1,
      1, 1, 1]
R : [1e-2, 
     1e-2, 1e-2, 1e-2, 
     1e-2, 1e-2, 1e-2, 1e-2, 1e-2, 
     1e-2, 1e-2, 1e-2, 1e-2, 1e-2,
     1e1, 1e1, 1e1,
     1e1, 1e1, 1e1]

Qfq : [0.1, 
       0.1, 0.1, 0.1, 
       0.1, 0.1, 0.1, 0.1, 0.1, 
       0.1, 0.1, 0.1, 0.1, 0.1, 
       1, 1, 1, 1,
       20, 20, 50]
Qfv : [0.01, 
       0.01, 0.01, 0.01, 
       0.01, 0.01, 0.01, 0.01, 0.01, 
       0.01, 0.01, 0.01, 0.01, 0.01,
       1, 1, 1,
       1, 1, 1]

# Problem definition parameters
time_step : 0.05    # Discretization timestep (seconds)
num_steps : 40      # number of timesteps

# Solver parameters
max_iters : 50              # maximum Gauss-Newton iterations
method : "trust_region"     # solver method, {linesearch, trust_region}
scaling : true
equality_constraints : true
num_threads : 4

tolerances:
  rel_cost_reduction: 0
  abs_cost_reduction: 0
  rel_gradient_along_dq: 0
  abs_gradient_along_dq: 0
  rel_state_change: 0
  abs_state_change: 0

# Method used to compute gradients of inverse dynamics, one of
# {forward_differences, central_differences, central_differences4, autodiff}
gradients_method: "forward_differences"

# Playback/visualization parameters
play_target_trajectory : true
play_initial_guess : true
play_optimal_trajectory : true

# Debugging parameters
linesearch_plot_every_iteration : false
print_debug_data : false
save_solver_stats_csv : true

# Contact model parameters. 
contact_stiffness : 500     # normal force stiffness, in N/m
dissipation_velocity : 0.1  # Hunt & Crossley-like model parameter, in m/s.

# Amount of smoothing (and therefore force at a distance) to apply when
# computing normal forces. This is equivalent to an analytical version of
# randomized smoothing, assuming that signed distances are drawn from a logistic
# distirbution with the smoothing factor as the scale parameter. Higher values
# mean more smoothing and more force at a distance. 
smoothing_factor : 0.01

# Friction
friction_coefficient : 0.5  # Coefficient of friction.
stiction_velocity: 0.05     # Regularization velocity, in m/s.

# MPC parameters
mpc : false
mpc_iters : 1
controller_frequency : 15
sim_time : 10
sim_time_step : 1e-2
sim_realtime_rate : 1.0
feed_forward : true
Kp : [900,                      # height
      700, 700, 700,            # torso
      500, 200, 200, 200, 200,  # right arm
      500, 200, 200, 200, 200,  # left arm
      0.0, 0.0, 0.0, 0.0,       # ball orientation
      0.0, 0.0, 0.0]            # ball position
Kd : [100,
      70, 70, 70,
      80, 50, 50, 50, 50,
      80, 50, 50, 50, 50,
      0.0, 0.0, 0.0,
      0.0, 0.0, 0.0]