##
#
# This file contains parameters defining the spinner optimization problem.
#
##

# Initial state, ordered by [finger 1, finger 2, spinner]
q_init : [1.3, 0.0]
v_init : [0.0, 0.0]

# Target state
q_nom_start : [0.0,-1.5]
q_nom_end : [0.0, -1.5]

# Initial guess. The initial sequence of generalized positions is generated by
# linearly iterpolating between q_init and q_guess.
q_guess : [1.3,-0.1]

# Cost Weights. These define diagonal matrices, again with the ordering
# [finger 1, finger 2, spinner]
Qq : [0.0, 0.1]  # Running cost
Qv : [1.0, 0.1]
R : [1e0, 1e6]  

Qfq : [10.0, 10.0]  # Terminal cost
Qfv : [0.1, 1.0]

# Problem definition parameters
time_step : 1.0   # Discretization timestep (seconds)
num_steps : 1     # number of timesteps

# Solver parameters
max_iters : 200             # maximum Gauss-Newton iterations
method : "trust_region"     # solver method, {linesearch, trust_region}
linesearch : "armijo"       # linesearch strategy, {armino, backtracking}
proximal_operator : false   # whether to add a proximal operator cost term
rho_proximal : 0.0          # the proximal cost multiplier

# Method used to compute gradients of inverse dynamics, one of
# {forward_differences, central_differences, central_differences4, autodiff}
gradients_method: "central_differences"

# Playback/visualization parameters
play_target_trajectory : true
play_initial_guess : true
play_optimal_trajectory : true

# Debugging parameters
linesearch_plot_every_iteration : false
print_debug_data : false
save_solver_stats_csv : true

# Contact model parameters
F : 1.0
delta : 0.01
dissipation_velocity : 0.1  # Hunt & Crossley-like model parameter, in m/s.

# Friction
friction_coefficient : 0.0  # Coefficient of friction.
stiction_velocity: 0.05     # Regularization velocity, in m/s.

# Contour plot parameters
save_contour_data : true
contour_q1_min : 1.25
contour_q1_max : 1.41
contour_q2_min : -0.45
contour_q2_max : 0.0
