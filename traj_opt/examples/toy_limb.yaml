##
#
# This file contains parameters for the acrobot swingup problem.
#
##

# Initial state ([shoulder, elbow])
q_init : [0.0, 0.0, 0.0, 0.3, -0.6]
v_init : [0.0, 0.0, 0.0, 0.0, 0.0]

# Target state
q_nom_start : [0.0, 0.0, 0.0, 0.3, -0.6]
q_nom_end : [0.1, 0.1, 0.3, 0.3, 0.2]
# q_nom_relative_to_q_init: [false, false, false, true, true]

# Initial guess. The initial sequence of generalized positions is generated by
# linearly iterpolating between q_init and q_gue
use_demonstration : true
q_guess : [0.0, 0.0, 0.0, 0.3, -0.6]

# Cost Weights. These define diagonal matrices, again with the ordering
# [finger 1, finger 2, spinner]
Qq : [0.1, 0.1, 0.1, 0.0, 0.0]  # Running cost
Qv : [1, 1, 1, 0.0, 0.0]
R : [1e3, 1e3, 1e3, 0.01, 0.01]

Qfq : [1e4, 1e4, 1e4, 0, 0]  # Terminal cost
Qfv : [1e2, 1e2, 1e2, 0.1, 0.1]

# Joint limits
q_min: [-0.15, -0.11, -0.5, -1, -1]
q_max:  [0.15, 0.11, 0.5, 1, 1]

# Joint limit cost weights
Qlq : [1e2, 1e2, 1e2, 0, 0]
# Qlq : [0, 0, 0, 0., 0.]

# Contact force cost
Qcf : 1e4

# Problem definition parameters
time_step : 0.1   # Discretization timestep (seconds)
num_steps : 30     # number of timesteps

# Solver parameter
max_iters : 300            # maximum Gauss-Newton iterations
method : "trust_region"     # solver method, {linesearch, trust_region}
exact_hessian : false
scaling : true
scaling_method : "adaptive_sqrt"
equality_constraints : false
normalize_quaternions : true
num_threads : 8

Delta0 : 1e-3

tolerances:
  rel_cost_reduction: 0
  abs_cost_reduction: 0
  rel_gradient_along_dq: 0
  abs_gradient_along_dq: 0
  rel_state_change: 0
  abs_state_change: 0

# linear_solver : "pentadiagonal_lu"

# Method used to compute gradients of inverse dynamics, one of
# {forward_differences, central_differences, central_differences4, autodiff}
gradients_method: "forward_differences"

# Playback/visualization parameters
play_target_trajectory : false
play_initial_guess : false
play_optimal_trajectory : true

# Debugging parameters
linesearch_plot_every_iteration : false
print_debug_data : false
save_solver_stats_csv : true

# Contact model parameters. 
contact_stiffness : 300     # normal force stiffness, in N/m
dissipation_velocity : 0.1  # Hunt & Crossley-like model parameter, in m/s.

# Amount of smoothing (and therefore force at a distance) to apply when
# computing normal forces. This is equivalent to an analytical version of
# randomized smoothing, assuming that signed distances are drawn from a logistic
# distirbution with the smoothing factor as the scale parameter. Higher values
# mean more smoothing and more force at a distance. 
smoothing_factor : 0.005

# Friction
friction_coefficient : 1.0  # Coefficient of friction.
stiction_velocity: 0.01     # Regularization velocity, in m/s.

mpc : false
mpc_iters : 5
controller_frequency : 100
sim_time : 10
sim_time_step : 5e-3
sim_realtime_rate : 0.0
Kp : [0, 0, 0, 500, 500]
Kd : [0, 0, 0, 25, 25]